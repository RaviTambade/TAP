
@{
    ViewData["Title"] = "Employees Page";
}

<div> 
    <h3>Login</h3>

    <table>
        <tr>
            <th><label>Email</label></th>
            <td><input type="email" name="email" id="txtemail"/></td>    
        </tr>
        <tr>
            <th><label>Password</label></th>
            <td><input type="password" name="password" id="txtpassword"/></td>
        </tr>

    </table>
    <button id="btn">Login</button>
</div>
<hr>

<div>
    
    <h3>Change Password</h3>

        <table>
            <tr>
                 <th>Email</th>
                 <td><input type="email" name="email" id="txtchangeemail"/></td>     
            </tr>
            <tr>
                <th><label>Old Password</label> </th>
                <td><input type="password" name="oldpassword" id="txtoldpassword"/><td> 
            </tr>
             <tr>
                <th><label>New Password</label></th>
                <td><input type="password" name="newpassword" id="txtnewpassword"/><td> 
            </tr>
        </table>
        <button id="btnchangepassword">Change Password</button>
</div>

<div>
    <h3>Register Employee</h3>

    
        <table>
        <tr>
            <th><label>First Name</label> </th>
            <td><input type="text" name="first_name" id="txtfirstname"/></td>
        </tr>
         <tr>
            <th><label>Last Name</label> </th>
            <td><input type="text" name="last_name" id="txtlastname"/></td>
        </tr>
           <tr>
            <th><label>Birth Date</label> </th>
            <td><input type="txt" name="birthdate" id="txtregisterbirthdate"/></td>
        </tr>
           <tr>
            <th><label>Hier Date</label> </th>
            <td><input type="txt" name="hierdate" id="txtregisterhierdate"/></td>
        </tr>
         <tr>
            <th><label>contact number</label> </th>
            <td><input type="text" name="contect_number" id="txtcontactnumber"/></td>
        </tr>
        
         <tr>
            <th><label>email</label> </th>
            <td><input type="email" name="email" id="txtregisteremail"/></td>
        </tr>
          <tr>
            <th><label>Password</label>  </th>
            <td><input type="password" name="password" id="txtregisterpassword"/> </td>
        </tr>
        <tr>
            <th><label>Photo</label> </th>
            <td><input type="txt" name="photo" id="txtregisterphoto"/></td>
        </tr>
        <tr>
            <th><label>Reports To</label> </th>
            <td><input type="txt" name="reportsto" id="txtregisterreportto"/></td>
        </tr>
         <tr>
            <th><label>Account number</label> </th>
            <td><input type="text" name="account_number" id="txtaccountnumber"/></td>
        </tr>
        
    </table>
    <button  id="registerbtn">Register</button>

</div>



 <script src="~/lib/jquery/dist/jquery.min.js"></script>

<script type="text/javascript">  
    console.log("hello");
     $(document).ready(function(){
        console.log("document is initialized");
        $('#btn').click(onClick);
        $('#registerbtn').click(onRegister);
        $('#btnchangepassword').click(onChangePassword);
    }); 
    
   
    function onClick(){
             //get data from email and password text boxes
        var strEmail=($('#txtemail').val());
        var strPassword=($('#txtpassword').val();)
    

           //create JSON object to store text boxes contents into json

         var credential={
            "email"=strEmail,
            "password"=strPassword
         }  
    
          //Invoke REST API programatically using $.ajax Jquery Function
        var restAPIUrl='/secure/validate'

        //It will invoke Remote REST API

        $.ajax({
            url: restAPIUrl,                                    // link of REST API Url
            type: "POST",                                       // type of HTTP rsquest
            contentType: "application/json; charset=utf-8",     // what is the type of content of REST body
            data: JSON.stringify(credential),                   // data to be sent through request body

            error: function(xhr, status, error) {               // callback function to be called on failure of rest API call

                var err = eval("(" + xhr.responseText + ")");  
                toastr.error(err.message);  
            },  

                                                     //callback function to be called on success of REST API call

            success: function(data) {  
                console.log("valid user");  
                return false;
            }
            });
               return false;
    }  




    //Event Handler for the change password

    function onChangePassword(){
        //get data from email and password text boxes
        console.log("okk...");
        var strEmail=($('#txtchangeemail').val());
        var strOldPassword($('#txtoldpassword').val());
        var strNewPassword($('#txtnewpassword').val());

        //create json object to store textboxes contents into json

        var credintialToUpdate={
            "email":strEmail,
            "oldpassword":strOldPassword,
            "newpassword":strNewPassword
        }

        //invoke Rest Api programatically usiny $.Ajax Jquery function

        var restAPIUrl='/secure/changepassword'

        //It will invoke remote restapi

        $.ajax({
            url:restAPIUrl,                                   // link of REST API url
            type:"put",                                       // type of HTTP request
            contentType:"application/json; charset=uft-8",    //  What is the type of content of REST body
                                                              // data to be sent through request body
            
                                                           //callback function to be called on failure of REST API call
            error: function(xhr, status, error) {  

                var err = eval("(" + xhr.responseText + ")");  
                toastr.error(err.message);  
            },  

                                                     //callback function to be called on success of REST API call

            success: function(data) {  
                console.log("Password is updated");  
                return false;  
            }  
        });  
        return false;
    }





    
     function onRegister() {  
        //get data from email and password text boxex
        console.log("okk..");
        var strFirstName=($('#txtfirstname').val());
        var strLastName=($('#txtlastname').val());
        var strBirthDate=($('#txtregisterbirthdate').val());
        var strHierDate=($('#txtregisterhierdate').val());
        var strContactNumber=($('#txtcontactnumber').val());
        var strEmail=($('#txtregisteremail').val());
        var strPassword=($('#txtregisterpassword').val());
        var strPhoto=($('#txtregisterphoto').val());
        var strReportsto=($('#txtregisterreportto').val());
        var strAccountNumber=($('#txtaccountnumber').val());

        //create JSON object to store textboxes contents into json

        var credentialToRegister = {
                    "firstName": strFirstName,
                    "lastName": strLastName,
                    "contactNumber":strContactNumber,
                    "accountNumber":strAccountNumber,
                    "email":strEmail ,
                    "password":strPassword ,
                    "birthdate": strBirthDate,
                    "hierdate":strHierDate,
                    "photo":strPhoto,
                    "reportsto":strReportsto
       }

       //Invoke REST API programmatically using $.ajax  JQuery function
       var restAPIUrl='/Employees/InsertEmp'

       //IT will invoke Remote REST API 

        $.ajax({  
            url:restAPIUrl ,                                // link of REST API url
            type: "POST",                                   // type of HTTP request
            contentType: "application/json; charset=utf-8",//  What is the type of content of REST body
            data: JSON.stringify(credentialToRegister),              // data to be sent through request body

                                                           //callback function to be called on failure of REST API call
            error: function(xhr, status, error) {  

                var err = eval("(" + xhr.responseText + ")");  
                toastr.error(err.message);  
            },  

                                                     //callback function to be called on success of REST API call

            success: function(data) {  
                console.log("Registerd..");  
                return false;  
            }  
        });  
        return false;  

     }
</script> 